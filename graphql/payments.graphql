extend type Query @guard {
    paymentMethods: [PaymentMethod]!
    credits(orderBy: [SortOption!]! @orderBy): [Credit]! @all
    transactions: [Transaction]!
}

type PaymentMethod {
    id: ID!
    member_id: Int!
    type: String
    mode: String
    identifier: String
    service: String
    card_number: String
    created_at: DateTime!
    updated_at: DateTime!
    member: Member! @belongsTo
}

type Transaction {
    id: ID!
    member_id: Int!
    room_id: Int
    type: Int
    credit: Float
    price: Float
    created_at: DateTime!
    updated_at: DateTime!
    member: Member! @belongsTo
    room: Room @belongsTo
}

type Credit {
    id: ID!
    amount: Int
    price: Float
}

extend type Mutation @guard {
    addPaymentMethod(
        type: String,
        mode: String,
        identifier: String,
        service: String,
        card_number: String,
    ): PaymentMethod

    choosePaymentMethod(
        method_id: ID!, @rules(apply: ["exists:payment_methods,id"]),
    ): PaymentMethod

    deletePaymentMethod(
        method_id: ID!, @rules(apply: ["exists:payment_methods,id"]),
    ): Boolean

    addCredits(
        method_id: ID!, @rules(apply: ["exists:payment_methods,id"]),
        credit_id: ID, @rules(apply: ["nullable", "required_without:amount", "exists:credits,id"]),
        amount: Float, @rules(apply: ["nullable", "required_without:credit_id", "numeric"]),
    ): Boolean
}
