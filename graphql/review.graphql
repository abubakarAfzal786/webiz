extend type Query @guard {
    reviews: [Review]!
    review(id: ID!): Review
#    reviews: [Review!]! @paginate(defaultCount: 10)
#    review(id: ID @eq): Review @find
}

type Review {
    id: ID!
    room_id: Int!
    room_name: String!
    member_id: Int!
    member_name: String!
    member_avatar_url: String!
    description: String!
    rate: Float!
    room: Room! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

extend type Mutation @guard {
    createReview(
        room_id: ID!, @rules(apply: ["exists:rooms,id"]),
        member_id: ID!, @rules(apply: ["exists:members,id"]),
        description: String!
        rate: Float!, @rules(apply: ["between:0,5"])
    ): Review

    updateReview(
        id: ID! @rules(apply: ["exists:reviews,id"]),
        room_id: ID!, @rules(apply: ["exists:rooms,id"]),
        member_id: ID!, @rules(apply: ["exists:members,id"]),
        description: String!
        rate: Float! @rules(apply: ["numeric", "between:0,5"])
    ): Review

    deleteReview(
        id: ID! @rules(apply: ["exists:reviews,id"])
    ): Boolean
}
