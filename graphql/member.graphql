#extend type Query @guard {
#    members: [Member!]! @paginate(defaultCount: 10)
#    member(id: ID @eq): Member @find
#}

type Member {
    id: ID!
    name: String!
    email: String!
    phone: String
    status: Boolean
    balance: Float
    car_number: String
    car_numbers: [CarNumber]! @hasMany
    avatar: Image @morphOne
    avatar_url: String
    favorites_count: Int!
    created_at: DateTime!
    updated_at: DateTime!
    reviews: [Review]! @hasMany
    bookings: [Booking]! @hasMany
    teams: [Team]! @belongsToMany
    pivot: TeamMemberPivot
    logos: [Image]! @morphMany
    payment_methods: [PaymentMethod]! @hasMany
    support_tickets: [SupportTicket]! @hasMany
}

type CarNumber {
    id: ID!
    member_id: ID!
    number: String!
    default: Boolean
    label: String
    member: Member @belongsTo
}

type TeamMemberPivot {
    phone: String
    joined: Boolean
}

extend type Mutation @guard {
    updateProfile(
        name: String!, @rules(apply: ["string", "min:2", "max:191"]),
        email: String!, @rules(apply: ["email"]),
        phone: String, @rules(apply: ["integer", "regex:/^\\+[1-9]\\d{1,14}$/"]),
        password: String, @rules(apply: ["string", "min:6", "max:191"]),
        #        car_number: String, @rules(apply: ["string", "min:2", "max:191"]),
        avatar: Upload, @rules(apply: ["image", "mimes:jpeg,png,jpg,gif,svg", "max:2048"]),
    ): UpdateProfileResponse

    updatePassword(
        old_password: String, @rules(apply: ["string", "max:191"]),
        new_password: String, @rules(apply: ["string", "min:6", "max:191", "different:old_password"]),
        password_confirmation: String, @rules(apply: ["same:new_password"]),
    ): MessageAndSuccessResponse

    updatePhone(
        first: Boolean!,
        phone: String!,
        code: Int
    ): MessageAndSuccessResponse

    createCarNumber(
        number: String!
        label: String!
        #        default: Boolean!
    ): CarNumber

    setDefaultCarNumber(
        id: ID!, @rules(apply: ["exists:car_numbers,id"]),
    ): CarNumber

    deleteCarNumber(
        id: ID! @rules(apply: ["exists:car_numbers,id"])
    ): Boolean

    uploadLogos(
        logos: [Upload!], @rules(apply: ["image", "mimes:jpeg,png,jpg,gif,svg", "max:2048"]),
    ): [Image]
}

type UpdateProfileResponse {
    message: String
    success: Boolean
    user: Member
}
